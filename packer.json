{
    "description": "Create each AMI; provision with ansible-playbook. Make files from Packer's manifest to send on to next steps.",
    "variables": {
        "vpc": "{{ env `BUILD_VPC_ID` }}",
        "subnet": "{{ env `BUILD_SUBNET_ID` }}",
        "aws_region": "{{ env `AWS_REGION` }}"
    },
    "_builders_comment": "The list of images to customize.",
    "builders": [
        {
        "name": "amazonlinux",
        "ami_description": "Amazon Linux Basic",
        "type": "amazon-ebs",
        "region": "{{ user `aws_region` }}",
        "source_ami_filter": {
            "filters": {
                "virtualization-type": "hvm",
                "name": "amzn-ami-hvm-*-x86_64-gp2",
                "root-device-type": "ebs"
            },
            "owners": ["137112412989", "591542846629", "801119661308",
                    "102837901569", "013907871322", "206029621532",
                    "286198878708", "443319210888"],
            "most_recent": true
        },
        "instance_type": "t2.micro",
        "ssh_username": "ec2-user",
        "ami_name": "testami_{{ build_name }}_{{ isotime \"2006-01-02_030405\" | clean_ami_name }}",
        "tags": {
            "Name": "testami_{{ build_name }}",
            "os": "{{ build_name }}"
        },
        "run_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "run_volume_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "snapshot_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "associate_public_ip_address": true,
        "vpc_id": "{{ user `vpc` }}",
        "subnet_id": "{{ user `subnet` }}"
        },
        {
        "name": "ubuntu16",
        "ami_description": "Canonical, Ubuntu, 16.04 LTS",
        "type": "amazon-ebs",
        "region": "{{ user `aws_region` }}",
        "source_ami_filter": {
            "filters": {
                "virtualization-type": "hvm",
                "name": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*",
                "root-device-type": "ebs"
            },
            "owners": ["099720109477"],
            "most_recent": true
        },
        "instance_type": "t2.micro",
        "ssh_username": "ubuntu",
        "ami_name": "testami_{{ build_name }}_{{ isotime \"2006-01-02_030405\" | clean_ami_name }}",
        "tags": {
            "Name": "testami_{{ build_name }}",
            "os": "{{ build_name }}"
        },
        "run_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "run_volume_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "snapshot_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "associate_public_ip_address": true,
        "vpc_id": "{{ user `vpc` }}",
        "subnet_id": "{{ user `subnet` }}"
        },
        {
        "name": "ubuntu18",
        "ami_description": "Canonical, Ubuntu, 18.04 LTS",
        "type": "amazon-ebs",
        "region": "{{ user `aws_region` }}",
        "source_ami_filter": {
            "filters": {
                "virtualization-type": "hvm",
                "name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*",
                "root-device-type": "ebs"
            },
            "owners": ["099720109477"],
            "most_recent": true
        },
        "instance_type": "t2.micro",
        "ssh_username": "ubuntu",
        "ami_name": "testami_{{ build_name }}_{{ isotime \"2006-01-02_030405\" | clean_ami_name }}",
        "tags": {
            "Name": "testami_{{ build_name }}",
            "os": "{{ build_name }}"
        },
        "run_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "run_volume_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "snapshot_tags": {
            "Name": "testami_{{ build_name }}"
        },
        "associate_public_ip_address": true,
        "vpc_id": "{{ user `vpc` }}",
        "subnet_id": "{{ user `subnet` }}"
        }
    ],
    "_provisioners_comments": "Install ansible on the each instance. Execute local ansible-playbook.",
    "provisioners": [
        {
            "type": "shell",
            "only": [ "ubuntu16" ],
            "inline": [
                "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"
            ]
        },
        {
            "type": "shell",
            "only": [ "amazonlinux", "amazonlinux2" ],
            "inline": [
                "sudo yum install python-pip -y",
                "sudo pip install ansible==2.5.5"
            ]
        },
        {
            "type": "shell",
            "only": [ "ubuntu16", "ubuntu18" ],
            "inline": [
                "sudo apt-get update",
                "sudo apt-get install python-pip -y",
                "sudo pip install ansible==2.5.5"
            ]
        },
        {
            "type": "ansible-local",
            "command": "ANSIBLE_STDOUT_CALLBACK=debug PYTHONUNBUFFERED=1 ansible-playbook",
            "playbook_file": "ansible/playbook.yml",
            "extra_arguments": [ "-vv" ],
            "galaxy_file": "ansible/requirements.yml",
            "playbook_dir": "ansible"
        },
        {
            "type": "shell",
            "script": "clean.sh",
            "execute_command": "{{ .Vars }} sudo -E -S sh '{{ .Path }}'"
        }
    ],
    "_comment_post-processors": "Write a file with the pertinent information from the output of Packer.",
    "post-processors": [
        {
            "type": "manifest",
            "output": "manifest.json",
            "strip_path": true
        }
    ]
}
